MEMORY {
	NES_HEADER:	start = $0000, size = $0020, file = %O, fill = yes;
	ZERO_PAGE:	start = $0000, size = $0100, type = rw, define = yes;
	WRAM:		start = $2000, size = $6000, type = rw, define = yes;
	STACK:		start = $0100, size = $0100, type = rw, define = yes;

	PRG_ROM00:	start = $8000, size = $4000, file = %O, fill = yes, define = yes;
	PRG_ROM01:	start = $8000, size = $4000, file = %O, fill = yes, define = yes;
	PRG_ROM02:	start = $8000, size = $4000, file = %O, fill = yes, define = yes;
	PRG_ROM03:	start = $c000, size = $F000, file = %O, fill = yes, define = yes;

	CHR_ROM:	start = $0000, size = $2000, file = %O, fill = yes;
}

SEGMENTS {
	HEADER:		load = NES_HEADER,	type = ro;
	BSS:		load = WRAM,		type = rw, define = yes;
	DATA:		load = WRAM,		type = rw, define = yes;

	BANK00:		load = PRG_ROM00,	type = ro;
	BANK01:		load = PRG_ROM01,	type = ro;
	BANK02:		load = PRG_ROM02,	type = ro;
	CODE:		load = PRG_ROM03,	type = ro;

	STUB00:		load = PRG_ROM00,	type = ro, start = $bfcc;
	STUB01:		load = PRG_ROM01,	type = ro, start = $bfcc;
	STUB02:		load = PRG_ROM02,	type = ro, start = $bfcc;
#	STUB03:		load = PRG_ROM03,	type = ro, start = $ffcc;

	CHR:		load = CHR_ROM,		type = ro;
}
